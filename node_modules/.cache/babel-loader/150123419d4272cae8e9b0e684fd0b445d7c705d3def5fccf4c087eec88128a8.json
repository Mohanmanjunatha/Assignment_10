{"ast":null,"code":"var _jsxFileName = \"/Users/kabirshaikh/Desktop/assignment-10/src/Components/WeatherDay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport sunny from '../Images/sunny.png';\nimport cloudy from '../Images/cloudy.jpeg';\nimport rainy from '../Images/rainy.png';\nimport './WeatherDay.css';\nimport { Link } from \"react-router-dom\";\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherDay = props => {\n  _s();\n  const weatherDetails = props.weatherInfoData;\n  console.log(weatherDetails + \"from weather day\");\n  const [finalDataa, setFinalData] = useState([]);\n  const fetchData = () => {\n    fetch(`http://api.openweathermap.org/geo/1.0/direct?q=Boston&limit=5&appid=7e645c5e4585ced4f48d0c5bcfc758c3`).then(res => res.json()).then(result => {\n      fetch(`http://api.openweathermap.org/data/2.5/forecast?lat=${result[0].lat}&lon=${result[0].lon}&appid=7e645c5e4585ced4f48d0c5bcfc758c3`).then(newRes => newRes.json()).then(newData => {\n        console.log(newData.list);\n        setFinalData(newData.list);\n      });\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weatherDayWrapper\",\n    children: finalDataa.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weatherContentWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dateAndTime\",\n            children: new Date(item.dt_txt).toLocaleDateString('en-us', {\n              weekday: \"long\",\n              year: \"numeric\",\n              month: \"short\",\n              day: \"numeric\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btnWrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-warning\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                style: {\n                  textDecoration: 'none'\n                },\n                to: `/weather/${item.dt}`,\n                state: finalDataa,\n                children: \"View More\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 79\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, item.clouds.dt, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherDay, \"ndr1hkfG30HtkXDUBEtF9ZJh6eA=\");\n_c = WeatherDay;\nexport default WeatherDay;\nvar _c;\n$RefreshReg$(_c, \"WeatherDay\");","map":{"version":3,"names":["React","useEffect","useState","sunny","cloudy","rainy","Link","format","WeatherDay","props","weatherDetails","weatherInfoData","console","log","finalDataa","setFinalData","fetchData","fetch","then","res","json","result","lat","lon","newRes","newData","list","map","item","Date","dt_txt","toLocaleDateString","weekday","year","month","day","textDecoration","dt","clouds"],"sources":["/Users/kabirshaikh/Desktop/assignment-10/src/Components/WeatherDay.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport sunny from '../Images/sunny.png';\nimport cloudy from '../Images/cloudy.jpeg';\nimport rainy from '../Images/rainy.png';\nimport './WeatherDay.css';\nimport { Link } from \"react-router-dom\";\nimport { format } from 'date-fns';\n\nconst WeatherDay = (props) => {\n    const weatherDetails = props.weatherInfoData;\n    console.log(weatherDetails + \"from weather day\");\n\n    const [finalDataa, setFinalData] = useState([]);\n    const fetchData = () => {\n        fetch(`http://api.openweathermap.org/geo/1.0/direct?q=Boston&limit=5&appid=7e645c5e4585ced4f48d0c5bcfc758c3`)\n            .then(res => res.json())\n            .then(result => {\n                fetch(`http://api.openweathermap.org/data/2.5/forecast?lat=${result[0].lat}&lon=${result[0].lon}&appid=7e645c5e4585ced4f48d0c5bcfc758c3`)\n                    .then(newRes => newRes.json())\n                    .then(newData => {\n                        console.log(newData.list);\n                        setFinalData(newData.list);\n                    })\n            })\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return (\n        <div className=\"weatherDayWrapper\">\n            {finalDataa.map((item) => {\n                return (\n                    <div key={item.clouds.dt} className=\"wrapper\">\n                        <div className=\"weatherContentWrapper\">\n                            <div className=\"dateAndTime\">\n                                {new Date(item.dt_txt).toLocaleDateString('en-us', { weekday: \"long\", year: \"numeric\", month: \"short\", day: \"numeric\" })}\n                                {/* <p className=\"h1\">{item.dt_txt}</p> */}\n                            </div>\n                            <div className=\"btnWrapper\">\n                                {/* <button><Link to={`/weather/${item.dt}`} state={finalDataa} >View More</Link></button> */}\n                                <button type=\"button\" class=\"btn btn-warning\"><Link style={{ textDecoration: 'none' }} to={`/weather/${item.dt}`} state={finalDataa} >View More</Link></button>\n                            </div>\n                        </div>\n                    </div>\n                );\n            })}\n\n        </div>\n    );\n}\n\nexport default WeatherDay;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,kBAAkB;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,MAAM,QAAQ,UAAU;AAAC;AAElC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAMC,cAAc,GAAGD,KAAK,CAACE,eAAe;EAC5CC,OAAO,CAACC,GAAG,CAACH,cAAc,GAAG,kBAAkB,CAAC;EAEhD,MAAM,CAACI,UAAU,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAMc,SAAS,GAAG,MAAM;IACpBC,KAAK,CAAE,sGAAqG,CAAC,CACxGC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,MAAM,IAAI;MACZJ,KAAK,CAAE,uDAAsDI,MAAM,CAAC,CAAC,CAAC,CAACC,GAAI,QAAOD,MAAM,CAAC,CAAC,CAAC,CAACE,GAAI,yCAAwC,CAAC,CACpIL,IAAI,CAACM,MAAM,IAAIA,MAAM,CAACJ,IAAI,EAAE,CAAC,CAC7BF,IAAI,CAACO,OAAO,IAAI;QACbb,OAAO,CAACC,GAAG,CAACY,OAAO,CAACC,IAAI,CAAC;QACzBX,YAAY,CAACU,OAAO,CAACC,IAAI,CAAC;MAC9B,CAAC,CAAC;IACV,CAAC,CAAC;EACV,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACZe,SAAS,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAK,SAAS,EAAC,mBAAmB;IAAA,UAC7BF,UAAU,CAACa,GAAG,CAAEC,IAAI,IAAK;MACtB,oBACI;QAA0B,SAAS,EAAC,SAAS;QAAA,uBACzC;UAAK,SAAS,EAAC,uBAAuB;UAAA,wBAClC;YAAK,SAAS,EAAC,aAAa;YAAA,UACvB,IAAIC,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;cAAEC,OAAO,EAAE,MAAM;cAAEC,IAAI,EAAE,SAAS;cAAEC,KAAK,EAAE,OAAO;cAAEC,GAAG,EAAE;YAAU,CAAC;UAAC;YAAA;YAAA;YAAA;UAAA,QAEtH,eACN;YAAK,SAAS,EAAC,YAAY;YAAA,uBAEvB;cAAQ,IAAI,EAAC,QAAQ;cAAC,KAAK,EAAC,iBAAiB;cAAA,uBAAC,QAAC,IAAI;gBAAC,KAAK,EAAE;kBAAEC,cAAc,EAAE;gBAAO,CAAE;gBAAC,EAAE,EAAG,YAAWR,IAAI,CAACS,EAAG,EAAE;gBAAC,KAAK,EAAEvB,UAAW;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAkB;cAAA;cAAA;cAAA;YAAA;UAAS;YAAA;YAAA;YAAA;UAAA,QAC7J;QAAA;UAAA;UAAA;UAAA;QAAA;MACJ,GAVAc,IAAI,CAACU,MAAM,CAACD,EAAE;QAAA;QAAA;QAAA;MAAA,QAWlB;IAEd,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAEA;AAEd,CAAC;AAAA,GA3CK7B,UAAU;AAAA,KAAVA,UAAU;AA6ChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}