{"ast":null,"code":"var _jsxFileName = \"/Users/kabirshaikh/Desktop/assignment-10/src/Components/WeatherDay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport sunny from '../Images/sunny.png';\nimport cloudy from '../Images/cloudy.jpeg';\nimport rainy from '../Images/rainy.png';\nimport './WeatherDay.css';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherDay = props => {\n  _s();\n  const weatherDetails = props.weatherInfoData;\n  console.log(weatherDetails + \"from weather day\");\n  const [finalDataa, setFinalData] = useState([]);\n  const fetchData = () => {\n    fetch(`http://api.openweathermap.org/geo/1.0/direct?q=Boston&limit=5&appid=7e645c5e4585ced4f48d0c5bcfc758c3`).then(res => res.json()).then(result => {\n      fetch(`http://api.openweathermap.org/data/2.5/forecast?lat=${result[0].lat}&lon=${result[0].lon}&appid=7e645c5e4585ced4f48d0c5bcfc758c3`).then(newRes => newRes.json()).then(newData => {\n        console.log(newData.list);\n        setFinalData(newData.list);\n      });\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weatherDayWrapper\",\n    children: finalDataa.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dateAndTime\",\n          children: item.dt_txt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temperatureWrapper\",\n          children: \"Temperature div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weatherDescription\",\n          children: item.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, item.clouds.dt, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherDay, \"ndr1hkfG30HtkXDUBEtF9ZJh6eA=\");\n_c = WeatherDay;\nexport default WeatherDay;\nvar _c;\n$RefreshReg$(_c, \"WeatherDay\");","map":{"version":3,"names":["React","useEffect","useState","sunny","cloudy","rainy","Link","WeatherDay","props","weatherDetails","weatherInfoData","console","log","finalDataa","setFinalData","fetchData","fetch","then","res","json","result","lat","lon","newRes","newData","list","map","item","dt_txt","weather","description","clouds","dt"],"sources":["/Users/kabirshaikh/Desktop/assignment-10/src/Components/WeatherDay.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport sunny from '../Images/sunny.png';\nimport cloudy from '../Images/cloudy.jpeg';\nimport rainy from '../Images/rainy.png';\nimport './WeatherDay.css';\nimport { Link } from \"react-router-dom\";\n\nconst WeatherDay = (props) => {\n    const weatherDetails = props.weatherInfoData;\n    console.log(weatherDetails + \"from weather day\");\n\n    const [finalDataa, setFinalData] = useState([]);\n    const fetchData = () => {\n        fetch(`http://api.openweathermap.org/geo/1.0/direct?q=Boston&limit=5&appid=7e645c5e4585ced4f48d0c5bcfc758c3`)\n            .then(res => res.json())\n            .then(result => {\n                fetch(`http://api.openweathermap.org/data/2.5/forecast?lat=${result[0].lat}&lon=${result[0].lon}&appid=7e645c5e4585ced4f48d0c5bcfc758c3`)\n                    .then(newRes => newRes.json())\n                    .then(newData => {\n                        console.log(newData.list);\n                        setFinalData(newData.list);\n                    })\n            })\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return (\n        <div className=\"weatherDayWrapper\">\n            {/* {weatherDetails.map((weather) => {\n                return (\n                    <div key={weather.id} className=\"renderedWeatherDayWrapper\">\n                        <div className=\"weatherDateandDay\">{weather.day}</div>\n                        <div className=\"weatherDegress\">{weather.degrees} degrees</div>\n                        <div className=\"weatherDayImage\">\n                            {weather.status == \"sunny\" ? <img id=\"weatherDayImage\" src={sunny} alt=\"weatherDayImage\" /> :\n                                weather.status == \"cloudy\" ? <img id=\"weatherDayImage\" src={cloudy} alt=\"weatherDayImage\" /> :\n                                    weather.status == \"rainy\" ? <img id=\"weatherDayImage\" src={rainy} alt=\"weatherDayImage\" /> : <p>Error</p>\n                            }\n                        </div>\n                        <button><Link to={`/weather/${weather.id}`} state={{data:weatherDetails}} >View</Link></button>\n                    </div>\n                );\n            })} */}\n\n            {finalDataa.map((item) => {\n                return (\n                    <div key={item.clouds.dt} className=\"wrapper\">\n                        <div className=\"dateAndTime\">\n                            {item.dt_txt}\n                        </div>\n                        <div className=\"temperatureWrapper\">\n                            Temperature div\n                        </div>\n                        <div className=\"weatherDescription\">\n                            {item.weather[0].description}\n                        </div>\n                    </div>\n                );\n            })}\n\n        </div>\n    );\n}\n\nexport default WeatherDay;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,kBAAkB;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC;AAExC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAMC,cAAc,GAAGD,KAAK,CAACE,eAAe;EAC5CC,OAAO,CAACC,GAAG,CAACH,cAAc,GAAG,kBAAkB,CAAC;EAEhD,MAAM,CAACI,UAAU,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAMa,SAAS,GAAG,MAAM;IACpBC,KAAK,CAAE,sGAAqG,CAAC,CACxGC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,MAAM,IAAI;MACZJ,KAAK,CAAE,uDAAsDI,MAAM,CAAC,CAAC,CAAC,CAACC,GAAI,QAAOD,MAAM,CAAC,CAAC,CAAC,CAACE,GAAI,yCAAwC,CAAC,CACpIL,IAAI,CAACM,MAAM,IAAIA,MAAM,CAACJ,IAAI,EAAE,CAAC,CAC7BF,IAAI,CAACO,OAAO,IAAI;QACbb,OAAO,CAACC,GAAG,CAACY,OAAO,CAACC,IAAI,CAAC;QACzBX,YAAY,CAACU,OAAO,CAACC,IAAI,CAAC;MAC9B,CAAC,CAAC;IACV,CAAC,CAAC;EACV,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACZc,SAAS,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAK,SAAS,EAAC,mBAAmB;IAAA,UAiB7BF,UAAU,CAACa,GAAG,CAAEC,IAAI,IAAK;MACtB,oBACI;QAA0B,SAAS,EAAC,SAAS;QAAA,wBACzC;UAAK,SAAS,EAAC,aAAa;UAAA,UACvBA,IAAI,CAACC;QAAM;UAAA;UAAA;UAAA;QAAA,QACV,eACN;UAAK,SAAS,EAAC,oBAAoB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAE7B,eACN;UAAK,SAAS,EAAC,oBAAoB;UAAA,UAC9BD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC;QAAW;UAAA;UAAA;UAAA;QAAA,QAC1B;MAAA,GATAH,IAAI,CAACI,MAAM,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAUlB;IAEd,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAEA;AAEd,CAAC;AAAA,GA1DKzB,UAAU;AAAA,KAAVA,UAAU;AA4DhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}