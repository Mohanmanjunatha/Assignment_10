{"ast":null,"code":"var _jsxFileName = \"/Users/kabirshaikh/Desktop/assignment-10/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport WeatherList from './Components/WeatherList';\nimport { Routes, Route } from 'react-router-dom';\nimport Weather from './Components/Weather';\nimport WeatherDay from './Components/WeatherDay';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const weatherInfo = [{\n    day: \"Sun Nov 27\",\n    degrees: \"10\",\n    status: \"cloudy\",\n    id: 1\n  }, {\n    day: \"Mon Nov 28\",\n    degrees: \"9\",\n    status: \"sunny\",\n    id: 2\n  }, {\n    day: \"Tue Nov 29\",\n    degrees: \"5\",\n    status: \"sunny\",\n    id: 3\n  }, {\n    day: \"Wed Nov 30\",\n    degrees: \"12\",\n    status: \"rainy\",\n    id: 4\n  }, {\n    day: \"Thu Nov 31\",\n    degrees: \"1\",\n    status: \"sunny\",\n    id: 5\n  }];\n  const [error, setError] = useState();\n  const [data, setData] = useState([]);\n  const [finalData, setFinalData] = useState([]);\n\n  // const REACT_APP_API_URL = 'https://api.openweathermap.org/data/2.5'\n  // const REACT_APP_API_KEY = 'eda983f3cff0e16a6514d0a2f854eafe'\n  // const REACT_APP_ICON_URL = 'https://openweathermap.org/img/w'\n\n  // const fetchData = () => {\n  //   // const weatherData = \"http://api.openweathermap.org/geo/1.0/direct?q=Boston&limit=5&appid=eda983f3cff0e16a6514d0a2f854eafe\"\n  //   // const weatherURL = \"`${REACT_APP_API_URL}//weather/?lat=${lat}&lon=${long}&units=metric&APPID=${REACT_APP_API_KEY}`\";\n  //   fetch('http://api.openweathermap.org/data/2.5/weather?q=London,uk&APPID=eda983f3cff0e16a6514d0a2f854eafe')\n  //     .then((response) => {\n  //       response.json();\n  //     })\n  //     .then((result) => {\n  //       setData(result);\n  //       console.log(result);\n  //     }).catch((err) => {\n  //       setError(err.message);\n  //     });\n  // }\n\n  const stateWeatherData = [];\n  const fetchData = () => {\n    axios.get('http://api.openweathermap.org/geo/1.0/direct?q=Boston&limit=5&appid=eda983f3cff0e16a6514d0a2f854eafe').then(result => {\n      setData(result);\n      const d = result.data;\n      d.map(item => {\n        if (item.state == \"Massachusetts\") {\n          stateWeatherData.push(item);\n        }\n      });\n    }).catch(err => {\n      setError(err.message);\n      console.log('The error is:', err.message);\n    });\n  };\n  const fetchTheData = () => {\n    axios.get('http://api.openweathermap.org/geo/1.0/direct?q=Boston&limit=5&appid=eda983f3cff0e16a6514d0a2f854eafe').then(data => {\n      axios.get(`http://api.openweathermap.org/data/2.5/forecast?lat=${data[0].lat}&lon=${data[0].lon}&appid=eda983f3cff0e16a6514d0a2f854eafe`).then(result => {});\n    });\n  };\n  const onSubmit = () => {\n    fetch(`http://api.openweathermap.org/geo/1.0/direct?q=Boston&limit=5&appid=7e645c5e4585ced4f48d0c5bcfc758c3`).then(res => res.json()).then(result => {\n      fetch(`http://api.openweathermap.org/data/2.5/forecast?lat=${result[0].lat}&lon=${result[0].lon}&appid=7e645c5e4585ced4f48d0c5bcfc758c3`).then(newRes => newRes.json()).then(newData => {\n        // setData(newData.list);\n        console.log(newData);\n      });\n    });\n  };\n  useEffect(() => {\n    // fetchData();\n    // console.log(stateWeatherData, 'filtered data');\n    // console.log(data, 'fetch data');\n    onSubmit();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appWrapper\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(WeatherList, {\n          weatherInfo: weatherInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/weather/:id\",\n        element: /*#__PURE__*/_jsxDEV(Weather, {\n          stateWeather: stateWeatherData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZVGu7T1HZ1yUtJhismMwuaIyHbk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","WeatherList","Routes","Route","Weather","WeatherDay","axios","App","weatherInfo","day","degrees","status","id","error","setError","data","setData","finalData","setFinalData","stateWeatherData","fetchData","get","then","result","d","map","item","state","push","catch","err","message","console","log","fetchTheData","lat","lon","onSubmit","fetch","res","json","newRes","newData"],"sources":["/Users/kabirshaikh/Desktop/assignment-10/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport WeatherList from './Components/WeatherList';\nimport { Routes, Route } from 'react-router-dom'\nimport Weather from './Components/Weather';\nimport WeatherDay from './Components/WeatherDay';\nimport axios from 'axios';\n\nfunction App() {\n\n  const weatherInfo = [\n    { day: \"Sun Nov 27\", degrees: \"10\", status: \"cloudy\", id: 1 },\n    { day: \"Mon Nov 28\", degrees: \"9\", status: \"sunny\", id: 2 },\n    { day: \"Tue Nov 29\", degrees: \"5\", status: \"sunny\", id: 3 },\n    { day: \"Wed Nov 30\", degrees: \"12\", status: \"rainy\", id: 4 },\n    { day: \"Thu Nov 31\", degrees: \"1\", status: \"sunny\", id: 5 },\n  ];\n\n\n  const [error, setError] = useState();\n  const [data, setData] = useState([]);\n  const [finalData, setFinalData] = useState([]);\n\n  // const REACT_APP_API_URL = 'https://api.openweathermap.org/data/2.5'\n  // const REACT_APP_API_KEY = 'eda983f3cff0e16a6514d0a2f854eafe'\n  // const REACT_APP_ICON_URL = 'https://openweathermap.org/img/w'\n\n  // const fetchData = () => {\n  //   // const weatherData = \"http://api.openweathermap.org/geo/1.0/direct?q=Boston&limit=5&appid=eda983f3cff0e16a6514d0a2f854eafe\"\n  //   // const weatherURL = \"`${REACT_APP_API_URL}//weather/?lat=${lat}&lon=${long}&units=metric&APPID=${REACT_APP_API_KEY}`\";\n  //   fetch('http://api.openweathermap.org/data/2.5/weather?q=London,uk&APPID=eda983f3cff0e16a6514d0a2f854eafe')\n  //     .then((response) => {\n  //       response.json();\n  //     })\n  //     .then((result) => {\n  //       setData(result);\n  //       console.log(result);\n  //     }).catch((err) => {\n  //       setError(err.message);\n  //     });\n  // }\n\n  const stateWeatherData = [];\n  const fetchData = () => {\n    axios.get('http://api.openweathermap.org/geo/1.0/direct?q=Boston&limit=5&appid=eda983f3cff0e16a6514d0a2f854eafe').then((result) => {\n      setData(result);\n      const d = result.data;\n      d.map((item) => {\n        if (item.state == \"Massachusetts\") {\n          stateWeatherData.push(item);\n        }\n      });\n    }).catch((err) => {\n      setError(err.message);\n      console.log('The error is:', err.message);\n    });\n  }\n\n  const fetchTheData = () => {\n    axios.get('http://api.openweathermap.org/geo/1.0/direct?q=Boston&limit=5&appid=eda983f3cff0e16a6514d0a2f854eafe')\n    .then((data) => {\n      axios.get(`http://api.openweathermap.org/data/2.5/forecast?lat=${data[0].lat}&lon=${data[0].lon}&appid=eda983f3cff0e16a6514d0a2f854eafe`)\n      .then((result) => {\n\n      });\n    })\n\n\n  }\n\n\n  const onSubmit = () => {\n    fetch(`http://api.openweathermap.org/geo/1.0/direct?q=Boston&limit=5&appid=7e645c5e4585ced4f48d0c5bcfc758c3`)\n      .then(res => res.json())\n      .then(result => {\n        fetch(`http://api.openweathermap.org/data/2.5/forecast?lat=${result[0].lat}&lon=${result[0].lon}&appid=7e645c5e4585ced4f48d0c5bcfc758c3`)\n          .then(newRes => newRes.json())\n          .then(newData => {\n            // setData(newData.list);\n            console.log(newData);\n          })\n      })\n  }\n\n\n  useEffect(() => {\n    // fetchData();\n    // console.log(stateWeatherData, 'filtered data');\n    // console.log(data, 'fetch data');\n    onSubmit();\n  }, []);\n\n  return (\n    <div className=\"appWrapper\">\n      <Routes>\n        <Route path='/' element={<WeatherList weatherInfo={weatherInfo} />} />\n        {/* <Route path='/weather/weatherDay' element={<WeatherDay />} /> */}\n        <Route path='/weather/:id' element={<Weather stateWeather={stateWeatherData} />} />\n      </Routes>\n      {/* <div className='weatherListWrapper'>\n        <WeatherList weatherInfo={weatherInfo} />\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}