{"ast":null,"code":"var _jsxFileName = \"/Users/kabirshaikh/Desktop/assignment-10/src/Components/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport './Weather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = props => {\n  _s();\n  // const [finalDataa, setFinalData] = useState([]);\n  const {\n    dt\n  } = useParams();\n  const location = useLocation();\n  console.log(location);\n  const dtText = [];\n  const [image, setImage] = useState([]);\n  const checkDtText = dt => {\n    location.state.map(item => {\n      if (dt == item.dt) {\n        dtText.push(item);\n      }\n    });\n  };\n\n  // const fetchImage = () => {\n  //     fetch(`http://api.openweathermap.org/geo/1.0/direct?q=Boston&limit=5&appid=7e645c5e4585ced4f48d0c5bcfc758c3`)\n  //         .then(res => res.json())\n  //         .then(result => {\n  //             fetch(`http://api.openweathermap.org/data/2.5/forecast?lat=${result[0].lat}&lon=${result[0].lon}&appid=7e645c5e4585ced4f48d0c5bcfc758c3`)\n  //                 .then(newRes => newRes.json())\n  //                 .then(newData => {\n  //                     if (dt == newData.list.dt) {\n  //                         const imageBlob = newData.list.weather[0].icon.blob();\n  //                         const imageObjectURL = URL.createObjectURL(imageBlob);\n  //                         setImage(imageObjectURL);\n  //                     }\n  //                     else {\n  //                         console.log('Failed to load the Image');\n  //                     }\n  //                 })\n  //         })\n  // }\n\n  const kelvinToCelcius = item => {\n    const finalTemp = Math.floor(item - 273.15);\n    return finalTemp;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weatherBodyWrapper\",\n    children: [checkDtText(dt), dtText.map(data => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weatherWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dateAndTimeWapper\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"h3\",\n            children: new Date(data.dt_txt).toLocaleString('en-us', {\n              weekday: \"long\",\n              year: \"numeric\",\n              month: \"short\",\n              day: \"numeric\",\n              hour: \"numeric\",\n              minute: \"numeric\",\n              second: \"numeric\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"desciptionWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Description: \", data.weather[0].description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tempWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Temp: \", kelvinToCelcius(data.main.temp), \" \", '\\u00b0', \" celcius\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"maxTemp\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Max-Temp: \", data.main.temp_max]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"minTemp\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Min-Temp: \", data.main.temp_min]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feelsLikeTemp\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Feels Like : \", data.main.feels_like]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"windWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wind\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Wind: \", data.wind.speed, \" km/hr\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Weather, \"q8TVwCwPMk4JlOaPGBsNuIYfW24=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useParams","Weather","props","dt","location","console","log","dtText","image","setImage","checkDtText","state","map","item","push","kelvinToCelcius","finalTemp","Math","floor","data","Date","dt_txt","toLocaleString","weekday","year","month","day","hour","minute","second","weather","description","main","temp","temp_max","temp_min","feels_like","wind","speed"],"sources":["/Users/kabirshaikh/Desktop/assignment-10/src/Components/Weather.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport './Weather.css';\n\nconst Weather = (props) => {\n    // const [finalDataa, setFinalData] = useState([]);\n    const { dt } = useParams();\n    const location = useLocation();\n    console.log(location);\n\n    const dtText = [];\n    const [image, setImage] = useState([]);\n\n    const checkDtText = (dt) => {\n        location.state.map((item) => {\n            if (dt == item.dt) {\n                dtText.push(item);\n            }\n        })\n    }\n\n    // const fetchImage = () => {\n    //     fetch(`http://api.openweathermap.org/geo/1.0/direct?q=Boston&limit=5&appid=7e645c5e4585ced4f48d0c5bcfc758c3`)\n    //         .then(res => res.json())\n    //         .then(result => {\n    //             fetch(`http://api.openweathermap.org/data/2.5/forecast?lat=${result[0].lat}&lon=${result[0].lon}&appid=7e645c5e4585ced4f48d0c5bcfc758c3`)\n    //                 .then(newRes => newRes.json())\n    //                 .then(newData => {\n    //                     if (dt == newData.list.dt) {\n    //                         const imageBlob = newData.list.weather[0].icon.blob();\n    //                         const imageObjectURL = URL.createObjectURL(imageBlob);\n    //                         setImage(imageObjectURL);\n    //                     }\n    //                     else {\n    //                         console.log('Failed to load the Image');\n    //                     }\n    //                 })\n    //         })\n    // }\n\n    const kelvinToCelcius = (item) => {\n       const finalTemp = Math.floor(item - 273.15);\n       return finalTemp;\n    }\n\n\n    return (\n        <div className=\"weatherBodyWrapper\">\n            {checkDtText(dt)}\n\n            {dtText.map((data) => {\n                return (\n                    <div className=\"weatherWrapper\">\n                        <div className=\"dateAndTimeWapper\">\n                          <p className=\"h3\">{new Date(data.dt_txt).toLocaleString('en-us', { weekday: \"long\", year: \"numeric\", month: \"short\", day: \"numeric\", hour: \"numeric\", minute: \"numeric\", second: \"numeric\" })}</p>\n                        </div>\n                        <div className=\"desciptionWrapper\">\n                            <div className=\"description\">\n                                <h2>Description: {data.weather[0].description}</h2>\n                            </div>\n                        </div>\n                        <div className=\"tempWrapper\">\n                            <div className=\"temp\">\n                                <h2>Temp: {kelvinToCelcius(data.main.temp)} {'\\u00b0'} celcius</h2>\n                            </div>\n                            <div className=\"maxTemp\">\n                                <h2>Max-Temp: {data.main.temp_max}</h2>\n                            </div>\n                            <div className=\"minTemp\">\n                                <h2>Min-Temp: {data.main.temp_min}</h2>\n                            </div>\n                            <div className=\"feelsLikeTemp\">\n                                <h2>Feels Like : {data.main.feels_like}</h2>\n                            </div>\n                        </div>\n                        <div className=\"windWrapper\">\n                            <div className=\"wind\">\n                                <h2>Wind: {data.wind.speed} km/hr</h2>\n                            </div>\n                        </div>\n\n                    </div>\n                );\n            })}\n        </div>\n    );\n\n\n}\n\nexport default Weather;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}