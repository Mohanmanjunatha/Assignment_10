{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport './Weather.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = props => {\n  _s();\n  // const [finalDataa, setFinalData] = useState([]);\n  const {\n    dt\n  } = useParams();\n  const location = useLocation();\n  console.log(location);\n  const dtText = [];\n  const checkDtText = dt_txt => {\n    location.state.map(item => {\n      if (dt_txt == item.dt_txt) {\n        dtText.push(item);\n      }\n    });\n  };\n\n  // const finalData = [];\n\n  // const checkId = (id) => {\n  //     location.state.data.map((item) => {\n  //         if (id == item.id) {\n  //             console.log('found');\n  //             finalData.push(item);\n  //             console.log(item);\n  //         }\n  //         else {\n  //             console.log('Not found');\n  //         }\n  //     })\n  // }\n\n  // const fetchData = () => {\n  //     fetch(`http://api.openweathermap.org/geo/1.0/direct?q=Boston&limit=5&appid=7e645c5e4585ced4f48d0c5bcfc758c3`)\n  //         .then(res => res.json())\n  //         .then(result => {\n  //             fetch(`http://api.openweathermap.org/data/2.5/forecast?lat=${result[0].lat}&lon=${result[0].lon}&appid=7e645c5e4585ced4f48d0c5bcfc758c3`)\n  //                 .then(newRes => newRes.json())\n  //                 .then(newData => {\n  //                     console.log(newData.list);\n  //                     setFinalData(newData.list);\n  //                 })\n  //         })\n  // }\n\n  // useEffect(() => {\n  //     fetchData();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: checkDtText(dtText)\n  }, void 0, false);\n};\n\n// return (\n//     <div>\n//         {checkDtText(dt_txt)}\n//         {/* {checkId(id)} */}\n//         {/* {finalData.map((item) => {\n//                 return (\n//                     <div className=\"finalWeatherWrapper\">\n//                         <div className=\"finalDayWrapper\">\n//                             {item.day}\n//                         </div>\n//                         <div className=\"finalDegreeWrapper\">\n//                             {item.degrees}\n//                         </div>\n//                         <div className=\"finalStatusWrapper\">\n//                             {item.status}\n//                         </div>\n//                     </div>\n//                 );\n//             })} */}\n//         {/* {finalDataa.map((item) => {\n//                 return (\n//                     <div key={Math.random().toString()}>\n//                         <div>\n//                             <h2>{item.weather[0].id}</h2>\n//                         </div>\n//                     </div>\n//                 );\n//             })} */}\n\n//     </div>\n// );\n// }\n_s(Weather, \"1Xqfsm1gctSrJTy5uLi7jN4ZykQ=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useParams","Weather","props","dt","location","console","log","dtText","checkDtText","dt_txt","state","map","item","push"],"sources":["/Users/kabirshaikh/Desktop/assignment-10/src/Components/Weather.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport './Weather.css';\n\nconst Weather = (props) => {\n    // const [finalDataa, setFinalData] = useState([]);\n    const { dt } = useParams();\n    const location = useLocation();\n    console.log(location);\n\n    const dtText = [];\n\n   const checkDtText = (dt_txt) => {\n    location.state.map((item) => {\n        if (dt_txt == item.dt_txt) {\n            dtText.push(item);\n        }\n    })\n   }\n\n\n\n    // const finalData = [];\n\n    // const checkId = (id) => {\n    //     location.state.data.map((item) => {\n    //         if (id == item.id) {\n    //             console.log('found');\n    //             finalData.push(item);\n    //             console.log(item);\n    //         }\n    //         else {\n    //             console.log('Not found');\n    //         }\n    //     })\n    // }\n\n    // const fetchData = () => {\n    //     fetch(`http://api.openweathermap.org/geo/1.0/direct?q=Boston&limit=5&appid=7e645c5e4585ced4f48d0c5bcfc758c3`)\n    //         .then(res => res.json())\n    //         .then(result => {\n    //             fetch(`http://api.openweathermap.org/data/2.5/forecast?lat=${result[0].lat}&lon=${result[0].lon}&appid=7e645c5e4585ced4f48d0c5bcfc758c3`)\n    //                 .then(newRes => newRes.json())\n    //                 .then(newData => {\n    //                     console.log(newData.list);\n    //                     setFinalData(newData.list);\n    //                 })\n    //         })\n    // }\n\n    // useEffect(() => {\n    //     fetchData();\n    // }, []);\n\n    return (\n        <>\n        {checkDtText(dtText)}\n        </>\n    );\n\n\n}\n\n// return (\n//     <div>\n//         {checkDtText(dt_txt)}\n//         {/* {checkId(id)} */}\n//         {/* {finalData.map((item) => {\n//                 return (\n//                     <div className=\"finalWeatherWrapper\">\n//                         <div className=\"finalDayWrapper\">\n//                             {item.day}\n//                         </div>\n//                         <div className=\"finalDegreeWrapper\">\n//                             {item.degrees}\n//                         </div>\n//                         <div className=\"finalStatusWrapper\">\n//                             {item.status}\n//                         </div>\n//                     </div>\n//                 );\n//             })} */}\n//         {/* {finalDataa.map((item) => {\n//                 return (\n//                     <div key={Math.random().toString()}>\n//                         <div>\n//                             <h2>{item.weather[0].id}</h2>\n//                         </div>\n//                     </div>\n//                 );\n//             })} */}\n\n//     </div>\n// );\n// }\n\n\nexport default Weather;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAO,eAAe;AAAC;AAAA;AAEvB,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EACvB;EACA,MAAM;IAAEC;EAAG,CAAC,GAAGH,SAAS,EAAE;EAC1B,MAAMI,QAAQ,GAAGL,WAAW,EAAE;EAC9BM,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EAErB,MAAMG,MAAM,GAAG,EAAE;EAElB,MAAMC,WAAW,GAAIC,MAAM,IAAK;IAC/BL,QAAQ,CAACM,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAK;MACzB,IAAIH,MAAM,IAAIG,IAAI,CAACH,MAAM,EAAE;QACvBF,MAAM,CAACM,IAAI,CAACD,IAAI,CAAC;MACrB;IACJ,CAAC,CAAC;EACH,CAAC;;EAIA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACI;IAAA,UACCJ,WAAW,CAACD,MAAM;EAAC,iBACjB;AAIX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA,GA1FMN,OAAO;EAAA,QAEMD,SAAS,EACPD,WAAW;AAAA;AAAA,KAH1BE,OAAO;AA6Fb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}